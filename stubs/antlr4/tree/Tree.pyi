# Stubs for antlr4.tree.Tree (Python 3.5)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any

INVALID_INTERVAL = ...  # type: Any

class Tree: ...
class SyntaxTree(Tree): ...
class ParseTree(SyntaxTree): ...
class RuleNode(ParseTree): ...
class TerminalNode(ParseTree): ...
class ErrorNode(TerminalNode): ...

class ParseTreeVisitor:
    def visit(self, tree): ...
    def visitChildren(self, node): ...
    def visitTerminal(self, node): ...
    def visitErrorNode(self, node): ...
    def defaultResult(self): ...
    def aggregateResult(self, aggregate, nextResult): ...
    def shouldVisitNextChild(self, node, currentResult): ...

ParserRuleContext = ...  # type: Any

class ParseTreeListener:
    def visitTerminal(self, node): ...
    def visitErrorNode(self, node): ...
    def enterEveryRule(self, ctx): ...
    def exitEveryRule(self, ctx): ...

class TerminalNodeImpl(TerminalNode):
    parentCtx = ...  # type: Any
    symbol = ...  # type: Any
    def __init__(self, symbol) -> None: ...
    def __setattr__(self, key, value): ...
    def getChild(self, i): ...
    def getSymbol(self): ...
    def getParent(self): ...
    def getPayload(self): ...
    def getSourceInterval(self): ...
    def getChildCount(self) -> object: ...
    def accept(self, visitor): ...
    def getText(self): ...

class ErrorNodeImpl(TerminalNodeImpl, ErrorNode):
    def __init__(self, token) -> None: ...
    def accept(self, visitor): ...

class ParseTreeWalker:
    DEFAULT = ...  # type: Any
    def walk(self, listener, t): ...
    def enterRule(self, listener, r): ...
    def exitRule(self, listener, r): ...
