# Stubs for antlr4.atn.SemanticContext (Python 3.5)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any

class SemanticContext:
    NONE = ...  # type: Any
    def eval(self, parser, outerContext): ...
    def evalPrecedence(self, parser, outerContext): ...

AND = ...  # type: Any

def andContext(a, b): ...

OR = ...  # type: Any

def orContext(a, b): ...
def filterPrecedencePredicates(collection): ...

class Predicate(SemanticContext):
    ruleIndex = ...  # type: Any
    predIndex = ...  # type: Any
    isCtxDependent = ...  # type: Any
    def __init__(self, ruleIndex: int = ..., predIndex: int = ..., isCtxDependent: bool = ...) -> None: ...
    def eval(self, parser, outerContext): ...
    def __hash__(self): ...
    def __eq__(self, other): ...

class PrecedencePredicate(SemanticContext):
    precedence = ...  # type: Any
    def __init__(self, precedence: int = ...) -> None: ...
    def eval(self, parser, outerContext): ...
    def evalPrecedence(self, parser, outerContext): ...
    def __cmp__(self, other): ...
    def __hash__(self): ...
    def __eq__(self, other): ...

class AND(SemanticContext):
    opnds = ...  # type: Any
    def __init__(self, a, b) -> None: ...
    def __eq__(self, other): ...
    def __hash__(self): ...
    def eval(self, parser, outerContext): ...
    def evalPrecedence(self, parser, outerContext): ...

class OR(SemanticContext):
    opnds = ...  # type: Any
    def __init__(self, a, b) -> None: ...
    def __eq__(self, other): ...
    def __hash__(self): ...
    def eval(self, parser, outerContext): ...
    def evalPrecedence(self, parser, outerContext): ...
