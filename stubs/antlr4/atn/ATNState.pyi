# Stubs for antlr4.atn.ATNState (Python 3.5)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any

INITIAL_NUM_TRANSITIONS = ...  # type: int

class ATNState:
    INVALID_TYPE = ...  # type: int
    BASIC = ...  # type: int
    RULE_START = ...  # type: int
    BLOCK_START = ...  # type: int
    PLUS_BLOCK_START = ...  # type: int
    STAR_BLOCK_START = ...  # type: int
    TOKEN_START = ...  # type: int
    RULE_STOP = ...  # type: int
    BLOCK_END = ...  # type: int
    STAR_LOOP_BACK = ...  # type: int
    STAR_LOOP_ENTRY = ...  # type: int
    PLUS_LOOP_BACK = ...  # type: int
    LOOP_END = ...  # type: int
    serializationNames = ...  # type: Any
    INVALID_STATE_NUMBER = ...  # type: int
    atn = ...  # type: Any
    stateNumber = ...  # type: Any
    stateType = ...  # type: Any
    ruleIndex = ...  # type: int
    epsilonOnlyTransitions = ...  # type: bool
    transitions = ...  # type: Any
    nextTokenWithinRule = ...  # type: Any
    def __init__(self) -> None: ...
    def __hash__(self): ...
    def __eq__(self, other): ...
    def onlyHasEpsilonTransitions(self): ...
    def isNonGreedyExitState(self): ...
    def addTransition(self, trans, index: int = ...): ...

class BasicState(ATNState):
    stateType = ...  # type: Any
    def __init__(self) -> None: ...

class DecisionState(ATNState):
    decision = ...  # type: int
    nonGreedy = ...  # type: bool
    def __init__(self) -> None: ...

class BlockStartState(DecisionState):
    endState = ...  # type: Any
    def __init__(self) -> None: ...

class BasicBlockStartState(BlockStartState):
    stateType = ...  # type: Any
    def __init__(self) -> None: ...

class BlockEndState(ATNState):
    stateType = ...  # type: Any
    startState = ...  # type: Any
    def __init__(self) -> None: ...

class RuleStopState(ATNState):
    stateType = ...  # type: Any
    def __init__(self) -> None: ...

class RuleStartState(ATNState):
    stateType = ...  # type: Any
    stopState = ...  # type: Any
    isPrecedenceRule = ...  # type: bool
    def __init__(self) -> None: ...

class PlusLoopbackState(DecisionState):
    stateType = ...  # type: Any
    def __init__(self) -> None: ...

class PlusBlockStartState(BlockStartState):
    stateType = ...  # type: Any
    loopBackState = ...  # type: Any
    def __init__(self) -> None: ...

class StarBlockStartState(BlockStartState):
    stateType = ...  # type: Any
    def __init__(self) -> None: ...

class StarLoopbackState(ATNState):
    stateType = ...  # type: Any
    def __init__(self) -> None: ...

class StarLoopEntryState(DecisionState):
    stateType = ...  # type: Any
    loopBackState = ...  # type: Any
    isPrecedenceDecision = ...  # type: Any
    def __init__(self) -> None: ...

class LoopEndState(ATNState):
    stateType = ...  # type: Any
    loopBackState = ...  # type: Any
    def __init__(self) -> None: ...

class TokensStartState(DecisionState):
    stateType = ...  # type: Any
    def __init__(self) -> None: ...
