# Stubs for antlr4.ParserRuleContext (Python 3.5)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any, Optional
from antlr4.RuleContext import RuleContext


class ParserRuleContext(RuleContext):
    children = ...  # type: Any
    start = ...  # type: Any
    stop = ...  # type: Any
    exception = ...  # type: Any
    def __init__(self, parent: Optional[Any] = ..., invokingStateNumber: Optional[Any] = ...) -> None: ...
    parentCtx = ...  # type: Any
    invokingState = ...  # type: Any
    def copyFrom(self, ctx): ...
    def enterRule(self, listener): ...
    def exitRule(self, listener): ...
    def addChild(self, child): ...
    def removeLastChild(self): ...
    def addTokenNode(self, token): ...
    def addErrorNode(self, badToken): ...
    def getChild(self, i, ttype: Optional[Any] = ...): ...
    def getChildren(self, predicate: Optional[Any] = ...): ...
    def getToken(self, ttype, i): ...
    def getTokens(self, ttype): ...
    def getTypedRuleContext(self, ctxType, i): ...
    def getTypedRuleContexts(self, ctxType): ...
    def getChildCount(self) -> object: ...
    def getSourceInterval(self): ...

class InterpreterRuleContext(ParserRuleContext):
    ruleIndex = ...  # type: Any
    def __init__(self, parent, invokingStateNumber, ruleIndex) -> None: ...
